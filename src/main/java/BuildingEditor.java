
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import org.apache.commons.io.FileUtils;
import org.json.JSONArray;
import org.json.JSONObject;


/**
 * This class implements building editing, using javax.swing for the GUI.
 * 
 * 
 * The constructor generates the form you can see on the Swing page, and the rest of the code is devoted
 * to event listeners for each user action.
 * 
 * @author bluu8, jender
 */
public class BuildingEditor extends javax.swing.JFrame {
    private boolean newBuilding = false; //If we're generating a new building, this field will be true.
    private Building currentBuilding; //The building we've selected

    private boolean confirmDelete = false; //Confirmations for deletion operations
    private boolean confirmRemove = false;
    
    // Add image files
    private File selectedAddImageFile;
    private File selectedAddAccImageFile;
    
    // Edit image files
    private File selectedEditImageFile;
    private File selectedEditAccImageFile;

    /**
     * The constructor for this method pulls in all the building data and generates the Swing form based on it.
     * 
     * We grab all of the relevant building data and create a user-friendly Swing form so that the 
     * building information can be edited.
     * 
     * @param building - The building we're editing.
     */
    public BuildingEditor(Building building) {
        initComponents();
        
        currentBuilding = building;

        if (building.getName() != null && building.getCode() != null) {
            //Set up all of the fields
            nameField.setText(building.getName());
            codeField.setText(building.getCode());
            headerLabel.setText("Edit Building");
            createBuildingButton.setText("Edit Building");
            deleteBuildingButton.setText("Delete Building");
            deleteBuildingButton.setForeground(java.awt.Color.RED);
            
            //Grab images
            ImageIcon orig = new ImageIcon("data/building/" + building.getCode() + "/splash.png");
            ImageIcon img = new ImageIcon(orig.getImage().getScaledInstance(323, 202, Image.SCALE_DEFAULT));
            previewImageLabel.setIcon(img);
            
            editFloorSelector.removeAllItems();
            
            //Grab all of the floors
            for (int i = 0; i != building.getFloors().size(); i++) {
                editFloorSelector.addItem(building.getFloors().get(i).getName());
            }
            
            this.setTitle("Edit Building: " + building.getName());
        }
        else {
            newBuilding = true;
            editorPanel.setVisible(false);
            this.setTitle("Add Building");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        errorLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        codeField = new javax.swing.JTextField();
        createBuildingButton = new javax.swing.JButton();
        headerLabel = new javax.swing.JLabel();
        deleteBuildingButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        editorPanel = new javax.swing.JTabbedPane();
        addFloorPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        addFloorNameField = new javax.swing.JTextField();
        addFloorButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addOpenFileButton = new javax.swing.JButton();
        addFileNameLabel = new javax.swing.JLabel();
        addFloorErrorLabel = new javax.swing.JLabel();
        addAccFileNameLabel = new javax.swing.JLabel();
        addOpenAccFileButton = new javax.swing.JButton();
        editFloorPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        editFloorNameField = new javax.swing.JTextField();
        editApplyFloorButton = new javax.swing.JButton();
        editRemoveFloorButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        editOpenFileButton = new javax.swing.JButton();
        editFileNameLabel = new javax.swing.JLabel();
        editFloorErrorLabel = new javax.swing.JLabel();
        editFloorSelector = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        editOrderUpButton = new javax.swing.JButton();
        editOrderDownButton = new javax.swing.JButton();
        editAccFileNameLabel = new javax.swing.JLabel();
        editOpenAccFileButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        editFloorOrderLabel = new javax.swing.JLabel();
        previewPanel = new javax.swing.JPanel();
        previewImageLabel = new javax.swing.JLabel();
        openPreviewImageButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText(" ");

        jLabel3.setText("Code (ie. mc)");

        createBuildingButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        createBuildingButton.setText("Create Building");
        createBuildingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBuildingButtonActionPerformed(evt);
            }
        });

        headerLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        headerLabel.setText("Create Building");

        deleteBuildingButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        deleteBuildingButton.setText("Cancel");
        deleteBuildingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBuildingButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("<html>The program will generate the necessary folders and base files. The data can be found under data/building/mycode/...</html>");

        jLabel2.setText("Name");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/pencil.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(headerLabel))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(createBuildingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBuildingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(errorLabel)
                    .addContainerGap(396, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBuildingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBuildingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap(215, Short.MAX_VALUE)
                    .addComponent(errorLabel)
                    .addGap(59, 59, 59)))
        );

        jLabel5.setText("New Floor Name");

        addFloorButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addFloorButton.setText("Add");
        addFloorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFloorButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Map Image");

        addOpenFileButton.setText("Open Base");
        addOpenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOpenFileButtonActionPerformed(evt);
            }
        });

        addFileNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addFileNameLabel.setText("None Selected");

        addFloorErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        addFloorErrorLabel.setText(" ");

        addAccFileNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addAccFileNameLabel.setText("None Selected");

        addOpenAccFileButton.setText("Open Accessibility");
        addOpenAccFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOpenAccFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addFloorPanelLayout = new javax.swing.GroupLayout(addFloorPanel);
        addFloorPanel.setLayout(addFloorPanelLayout);
        addFloorPanelLayout.setHorizontalGroup(
            addFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFloorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addFloorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addFloorPanelLayout.createSequentialGroup()
                        .addGroup(addFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addFloorPanelLayout.createSequentialGroup()
                                .addComponent(addAccFileNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addOpenAccFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addFloorPanelLayout.createSequentialGroup()
                                .addComponent(addFileNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addOpenFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(168, 168, 168))
                    .addGroup(addFloorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFloorNameField))
                    .addGroup(addFloorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(addFloorErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        addFloorPanelLayout.setVerticalGroup(
            addFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFloorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addFloorNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFileNameLabel)
                    .addComponent(addOpenFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAccFileNameLabel)
                    .addComponent(addOpenAccFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(addFloorErrorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFloorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        editorPanel.addTab("Add Floor", addFloorPanel);

        jLabel7.setText("Floor Name");

        editApplyFloorButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editApplyFloorButton.setText("Apply");
        editApplyFloorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editApplyFloorButtonActionPerformed(evt);
            }
        });

        editRemoveFloorButton.setForeground(new java.awt.Color(255, 0, 51));
        editRemoveFloorButton.setText("Remove");
        editRemoveFloorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRemoveFloorButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Select Map Image");

        editOpenFileButton.setText("Open Base");
        editOpenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOpenFileButtonActionPerformed(evt);
            }
        });

        editFileNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        editFileNameLabel.setText("None Selected");

        editFloorErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        editFloorErrorLabel.setText(" ");

        editFloorSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        editFloorSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFloorSelectorActionPerformed(evt);
            }
        });

        jLabel9.setText("Floor");

        editOrderUpButton.setText("Move Up");
        editOrderUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOrderUpButtonActionPerformed(evt);
            }
        });

        editOrderDownButton.setText("Move Down");
        editOrderDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOrderDownButtonActionPerformed(evt);
            }
        });

        editAccFileNameLabel.setText("None Selected");

        editOpenAccFileButton.setText("Open Accessibility");
        editOpenAccFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOpenAccFileButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel6.setText("Editor");

        editFloorOrderLabel.setText("Order: ...");

        javax.swing.GroupLayout editFloorPanelLayout = new javax.swing.GroupLayout(editFloorPanel);
        editFloorPanel.setLayout(editFloorPanelLayout);
        editFloorPanelLayout.setHorizontalGroup(
            editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editFloorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editFloorPanelLayout.createSequentialGroup()
                        .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editApplyFloorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(editFloorPanelLayout.createSequentialGroup()
                                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(editFloorPanelLayout.createSequentialGroup()
                                        .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editFileNameLabel)
                                            .addComponent(editAccFileNameLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(editOpenFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(editOpenAccFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(editFloorPanelLayout.createSequentialGroup()
                                        .addComponent(editOrderUpButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editOrderDownButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editRemoveFloorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(editFloorPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(editFloorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(editFloorOrderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(editFloorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editFloorErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editFloorNameField))))
                        .addGap(16, 16, 16))
                    .addGroup(editFloorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(editFloorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        editFloorPanelLayout.setVerticalGroup(
            editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editFloorPanelLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(editFloorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editFloorOrderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editOrderUpButton)
                    .addComponent(editOrderDownButton)
                    .addComponent(editRemoveFloorButton))
                .addGap(18, 18, 18)
                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(editFloorErrorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(editFloorNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editFileNameLabel)
                    .addComponent(editOpenFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editFloorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editAccFileNameLabel)
                    .addComponent(editOpenAccFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editApplyFloorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        editorPanel.addTab("Edit Floors", editFloorPanel);

        previewImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        openPreviewImageButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        openPreviewImageButton.setText("Open New Preview Image");
        openPreviewImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openPreviewImageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
        previewPanel.setLayout(previewPanelLayout);
        previewPanelLayout.setHorizontalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openPreviewImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                    .addComponent(previewImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        previewPanelLayout.setVerticalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(previewImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openPreviewImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        editorPanel.addTab("Edit Preview Image", previewPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editorPanel)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Refreshes the list of floors for this building.
     * 
     * Reset the floor list (for the floor selector) and pull in all the current floors.
     */
    private void refreshFloorList() {
        editFloorSelector.removeAllItems();
            
        for (int i = 0; i != currentBuilding.getFloors().size(); i++) {
            editFloorSelector.addItem(currentBuilding.getFloors().get(i).getName());
        }
    }
    
    /**
     * When the "add building" button is clicked, a new building is generated based on the provided fields.
     * 
     * Fetches the data for all of the building information fields the user must fill out, and generates
     * a new Building object based on it. Creates new JSON information and a new JSON file, and adds it to
     * data/building.
     * 
     * @param evt - The java Action Event.
     */
    private void createBuildingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBuildingButtonActionPerformed
        if (nameField.getText().equals("")) {
            errorLabel.setText("Name field cannot be blank");
            return;
        }
        else if (codeField.getText().equals("")) {
            errorLabel.setText("Code field cannot be blank");
            return;
        }
        
        // save old code name
        String oldCode = null;
        if (!newBuilding) oldCode = String.valueOf(currentBuilding.getCode());
        
        currentBuilding.setName(nameField.getText());
        currentBuilding.setCode(codeField.getText());
        
        // brand new building!
        File dir = new File("data/building/" + currentBuilding.getCode());
        if (newBuilding) {
            // make new folder directory
            if (dir.exists()) errorLabel.setText("Building code " + currentBuilding.getCode() + " already exists");
            else if (!dir.mkdirs()) errorLabel.setText("Failed to create directory!");
        }
        // not new, edit the building
        else {
            // rename folder
            try {
                Building map = new Building(oldCode);
                map.setName(currentBuilding.getName());
                map.writeToFile();
            }
            catch (FileNotFoundException e) {
                System.out.println("Failed to open old map code data.json");
            }
            
            // rename folder         
            File olddir = new File("data/building/" + oldCode);
            olddir.renameTo(new File("data/building/" + currentBuilding.getCode()));
        }
        
        currentBuilding.writeToFile();
        this.dispose();
    }//GEN-LAST:event_createBuildingButtonActionPerformed

    private void deleteBuildingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBuildingButtonActionPerformed
        // building is being edited, so delete
        if (!newBuilding) {
            if (!confirmDelete) {
                confirmDelete = true;
                deleteBuildingButton.setText("Confirm?");
            }
            else {
                try {
                    // nuke directory
                    org.apache.commons.io.FileUtils.deleteDirectory(new File("data/building/" + currentBuilding.getCode()));
                    currentBuilding.setName(null);
                    currentBuilding.setCode(null);
                    
                    this.dispose();
                }
                catch (IOException ex) {
                    System.out.println("Failed to remove " + currentBuilding.getCode()+ "!");
                    errorLabel.setText("Failed to remove " + currentBuilding.getCode() + "!");
                }
            }
        }
        else this.dispose();
        
        // just throw out the container otherwise, cancel
    }//GEN-LAST:event_deleteBuildingButtonActionPerformed

    private void addOpenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOpenFileButtonActionPerformed
        // make a file selector and set the default directory to home
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedAddImageFile = fileChooser.getSelectedFile();
            addFileNameLabel.setText(selectedAddImageFile.getName());
        }
    }//GEN-LAST:event_addOpenFileButtonActionPerformed

    private void openPreviewImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openPreviewImageButtonActionPerformed
        // make a file selector and set the default directory to home
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File selected = fileChooser.getSelectedFile();
                File dest = new File("data/building/" + currentBuilding.getCode() + "/splash.png");
                FileUtils.copyFile(selected, dest);
                
                // of course resizing an image isn't as simple as we'd like it
                // we have to go get() and then get() and then create new image icon of an imageicon...
                ImageIcon orig = new ImageIcon("data/building/" + currentBuilding.getCode() + "/splash.png");
                ImageIcon img = new ImageIcon(orig.getImage().getScaledInstance(323, 202, Image.SCALE_DEFAULT));
                previewImageLabel.setIcon(img);
            }
        }
        catch (IOException e) {
            openPreviewImageButton.setText("Failed to open image!");
        }
    }//GEN-LAST:event_openPreviewImageButtonActionPerformed

    private void addFloorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFloorButtonActionPerformed
        if (addFloorNameField.getText().equals("")) {
            addFloorErrorLabel.setText("Floor name cannot be blank");
            addFloorErrorLabel.setForeground(Color.red);
        }
        else if (selectedAddImageFile == null) {
            addFloorErrorLabel.setText("No floor image selected");
            addFloorErrorLabel.setForeground(Color.red);
        }
        else if (selectedAddAccImageFile == null) {
            addFloorErrorLabel.setText("No floor accessibility image selected");
            addFloorErrorLabel.setForeground(Color.red);
        }
        else {
            try {
                // set new highest id for next floor
                currentBuilding.incrementID();
                
                File dest = new File("data/building/" + currentBuilding.getCode() + "/" + currentBuilding.getHighestID() + ".png");
                File destAcc = new File("data/building/" + currentBuilding.getCode() + "/" + currentBuilding.getHighestID() + "a.png");

                FileUtils.copyFile(selectedAddImageFile, dest);
                FileUtils.copyFile(selectedAddAccImageFile, destAcc);
                
                JSONObject newFloor = new JSONObject();
                newFloor.put("name", addFloorNameField.getText());
                newFloor.put("id", currentBuilding.getHighestID());
                newFloor.put("poi", new JSONArray());
                currentBuilding.addFloor(new Floor(newFloor, true));  
                
                currentBuilding.writeToFile();
                
                addFloorErrorLabel.setText("Added new floor");
                addFloorErrorLabel.setForeground(Color.green);
                
                addFloorNameField.setText("");
                selectedAddImageFile = null;
                selectedAddAccImageFile = null;
                addFileNameLabel.setText("None Selected");
                addAccFileNameLabel.setText("None selected");
                
                refreshFloorList();
            }
            catch (IOException e) {
                addFloorErrorLabel.setText(("Failed to open image files!"));
                addFloorErrorLabel.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_addFloorButtonActionPerformed

    private void editApplyFloorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editApplyFloorButtonActionPerformed
        if (editFloorSelector.getSelectedIndex() == -1) {
            editFloorErrorLabel.setText("You must select a floor");
            editFloorErrorLabel.setForeground(Color.red);
        }
        else if (editFloorNameField.getText().equals("")) {
            editFloorErrorLabel.setText("Floor name cannot be blank");
            editFloorErrorLabel.setForeground(Color.red);
        }
        else {
            try {
                Floor fl = currentBuilding.getFloor(editFloorSelector.getSelectedIndex());
                fl.setName(editFloorNameField.getText());
                File dest = new File("data/building/" + currentBuilding.getCode() + "/" + fl.getID() + ".png");
                File destAcc = new File("data/building/" + currentBuilding.getCode() + "/" + fl.getID() + "a.png");

                if (selectedEditImageFile != null) FileUtils.copyFile(selectedEditImageFile, dest);
                if (selectedEditAccImageFile != null) FileUtils.copyFile(selectedEditAccImageFile, destAcc);
                
                editFloorErrorLabel.setText("Floor changes applied");
                editFloorErrorLabel.setForeground(Color.green);

                int selected = editFloorSelector.getSelectedIndex();
                refreshFloorList();
                editFloorSelector.setSelectedIndex(selected);
            }
            catch (IOException e) {
                editFloorErrorLabel.setText(("Failed to open image files!"));
                editFloorErrorLabel.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_editApplyFloorButtonActionPerformed

    private void editRemoveFloorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRemoveFloorButtonActionPerformed
        if (!confirmRemove) {
            confirmRemove = true;
            editRemoveFloorButton.setText("Confirm?");
        }
        else {
            confirmRemove = false;
            editRemoveFloorButton.setText("Remove");
            
            currentBuilding.removeFloor(editFloorSelector.getSelectedIndex());
            editFloorNameField.setText("");
            selectedEditImageFile = null;
            selectedEditAccImageFile = null;
            editFileNameLabel.setText("None Selected");
            editAccFileNameLabel.setText("None selected");
        }
    }//GEN-LAST:event_editRemoveFloorButtonActionPerformed

    private void editOpenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOpenFileButtonActionPerformed
        // make a file selector and set the default directory to home
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedEditImageFile = fileChooser.getSelectedFile();
            editFileNameLabel.setText(selectedEditImageFile.getName());
        }
    }//GEN-LAST:event_editOpenFileButtonActionPerformed

    private void editOpenAccFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOpenAccFileButtonActionPerformed
        // make a file selector and set the default directory to home
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedEditAccImageFile = fileChooser.getSelectedFile();
            editAccFileNameLabel.setText(selectedEditAccImageFile.getName());
        }
    }//GEN-LAST:event_editOpenAccFileButtonActionPerformed

    private void editFloorSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFloorSelectorActionPerformed
        int selected = editFloorSelector.getSelectedIndex();
        if (selected != -1) {
            Floor fl = currentBuilding.getFloor(selected);
            editFloorNameField.setText(fl.getName());
            editFloorOrderLabel.setText("Order: " + (selected + 1));
        }
        
        editOrderUpButton.setEnabled(true);
        editOrderDownButton.setEnabled(true);
        
        if (selected == 0) editOrderUpButton.setEnabled(false);
        if (selected == editFloorSelector.getItemCount() - 1) editOrderDownButton.setEnabled(false);
    }//GEN-LAST:event_editFloorSelectorActionPerformed

    private void editOrderUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOrderUpButtonActionPerformed
        int selected = editFloorSelector.getSelectedIndex();
        currentBuilding.moveFloorOrderUp(selected);
        refreshFloorList();
        editFloorSelector.setSelectedIndex(selected - 1);
    }//GEN-LAST:event_editOrderUpButtonActionPerformed

    private void editOrderDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOrderDownButtonActionPerformed
        int selected = editFloorSelector.getSelectedIndex();
        currentBuilding.moveFloorOrderDown(selected);
        refreshFloorList();
        editFloorSelector.setSelectedIndex(selected + 1);
    }//GEN-LAST:event_editOrderDownButtonActionPerformed

    private void addOpenAccFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOpenAccFileButtonActionPerformed
        // make a file selector and set the default directory to home
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedAddAccImageFile = fileChooser.getSelectedFile();
            addAccFileNameLabel.setText(selectedAddAccImageFile.getName());
        }
    }//GEN-LAST:event_addOpenAccFileButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuildingEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuildingEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuildingEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuildingEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                System.out.println("Please run LoginForm instead");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addAccFileNameLabel;
    private javax.swing.JLabel addFileNameLabel;
    private javax.swing.JButton addFloorButton;
    private javax.swing.JLabel addFloorErrorLabel;
    private javax.swing.JTextField addFloorNameField;
    private javax.swing.JPanel addFloorPanel;
    private javax.swing.JButton addOpenAccFileButton;
    private javax.swing.JButton addOpenFileButton;
    private javax.swing.JTextField codeField;
    private javax.swing.JButton createBuildingButton;
    private javax.swing.JButton deleteBuildingButton;
    private javax.swing.JLabel editAccFileNameLabel;
    private javax.swing.JButton editApplyFloorButton;
    private javax.swing.JLabel editFileNameLabel;
    private javax.swing.JLabel editFloorErrorLabel;
    private javax.swing.JTextField editFloorNameField;
    private javax.swing.JLabel editFloorOrderLabel;
    private javax.swing.JPanel editFloorPanel;
    private javax.swing.JComboBox<String> editFloorSelector;
    private javax.swing.JButton editOpenAccFileButton;
    private javax.swing.JButton editOpenFileButton;
    private javax.swing.JButton editOrderDownButton;
    private javax.swing.JButton editOrderUpButton;
    private javax.swing.JButton editRemoveFloorButton;
    private javax.swing.JTabbedPane editorPanel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton openPreviewImageButton;
    private javax.swing.JLabel previewImageLabel;
    private javax.swing.JPanel previewPanel;
    // End of variables declaration//GEN-END:variables
}
